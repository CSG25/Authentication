[{"H:\\reactapps\\reactapp20\\src\\index.js":"1","H:\\reactapps\\reactapp20\\src\\App.js":"2","H:\\reactapps\\reactapp20\\src\\pages\\AuthPage.js":"3","H:\\reactapps\\reactapp20\\src\\pages\\HomePage.js":"4","H:\\reactapps\\reactapp20\\src\\components\\Layout\\Layout.js":"5","H:\\reactapps\\reactapp20\\src\\components\\Profile\\UserProfile.js":"6","H:\\reactapps\\reactapp20\\src\\components\\Layout\\MainNavigation.js":"7","H:\\reactapps\\reactapp20\\src\\components\\Profile\\ProfileForm.js":"8","H:\\reactapps\\reactapp20\\src\\components\\StartingPage\\StartingPageContent.js":"9","H:\\reactapps\\reactapp20\\src\\components\\Auth\\AuthForm.js":"10","H:\\reactapps\\reactapp20\\src\\store\\auth-context.js":"11"},{"size":387,"mtime":1675368768508,"results":"12","hashOfConfig":"13"},{"size":915,"mtime":1675418377733,"results":"14","hashOfConfig":"13"},{"size":130,"mtime":1648643396000,"results":"15","hashOfConfig":"13"},{"size":171,"mtime":1648643396000,"results":"16","hashOfConfig":"13"},{"size":246,"mtime":1648643396000,"results":"17","hashOfConfig":"13"},{"size":278,"mtime":1648643396000,"results":"18","hashOfConfig":"13"},{"size":939,"mtime":1679312419854,"results":"19","hashOfConfig":"13"},{"size":1320,"mtime":1675370630069,"results":"20","hashOfConfig":"13"},{"size":240,"mtime":1648643396000,"results":"21","hashOfConfig":"13"},{"size":3202,"mtime":1675417598341,"results":"22","hashOfConfig":"13"},{"size":1280,"mtime":1675417227724,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1ln6csv",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"H:\\reactapps\\reactapp20\\src\\index.js",[],["48","49"],"H:\\reactapps\\reactapp20\\src\\App.js",[],"H:\\reactapps\\reactapp20\\src\\pages\\AuthPage.js",[],"H:\\reactapps\\reactapp20\\src\\pages\\HomePage.js",[],"H:\\reactapps\\reactapp20\\src\\components\\Layout\\Layout.js",[],"H:\\reactapps\\reactapp20\\src\\components\\Profile\\UserProfile.js",[],"H:\\reactapps\\reactapp20\\src\\components\\Layout\\MainNavigation.js",[],"H:\\reactapps\\reactapp20\\src\\components\\Profile\\ProfileForm.js",[],"H:\\reactapps\\reactapp20\\src\\components\\StartingPage\\StartingPageContent.js",[],"H:\\reactapps\\reactapp20\\src\\components\\Auth\\AuthForm.js",["50"],"import { useState, useRef, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport AuthContext from \"../../store/auth-context\";\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const authCtx = useContext(AuthContext);\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    setIsLoading(true);\n    let url;\n\n    if (isLogin) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBarQfUA4YFGk5WAb9o1f9ExYzUEtTC8WM\";\n    } else {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBarQfUA4YFGk5WAb9o1f9ExYzUEtTC8WM\";\n    }\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSectureToken: true,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = \"Authentication failed\";\n            if (data && data.error && data.error.message) {\n              errorMessage = data.error.message;\n            }\n            alert(errorMessage);\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        \n        // const expirationTime = new Date(\n        //   new Date().getTime() + +data.expiresIn * 1000\n        // );\n        // authCtx.login(data.idToken, expirationTime.toISOString());\n        history.replace(\"/\");\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          )}\n          {isLoading && <p>Sending request..</p>}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","H:\\reactapps\\reactapp20\\src\\store\\auth-context.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":12,"column":9,"nodeType":"57","messageId":"58","endLine":12,"endColumn":16},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'authCtx' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]